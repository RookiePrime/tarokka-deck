{"version":3,"sources":["Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","imageUrl","this","props","cardData","className","style","backgroundImage","process","Component","App","state","numOfCards","cards","makeCard","daCard","deck","Math","floor","random","length","flipped","setState","concat","filter","card","JSON","parse","stringify","deckData","theCards","map","i","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qqCAmBeA,E,4JAfX,WAAU,IAEDC,EADYC,KAAKC,MAAjBC,SACAH,SAEP,OACE,qBAAKI,UAAU,OAAOC,MAClB,CACEC,gBAAgB,OAAD,OAASC,gBAAT,mBAA0CP,EAA1C,Y,GARVQ,a,OCqDJC,E,4MAjDbC,MAAQ,CACNC,WAAY,EACZC,MAAO,I,EAaTC,SAAW,WACT,IAAMC,EAAS,EAAKJ,MAAMK,KAAKC,KAAKC,MAAMD,KAAKE,SAAW,EAAKR,MAAMK,KAAKI,SAE1EL,EAAOM,QAAUJ,KAAKE,SAAW,GAEjC,EAAKG,SAAS,CACZV,WAAY,EAAKD,MAAMC,WAAa,EACpCC,MAAO,EAAKF,MAAME,MAAMU,OAAOR,GAC/BC,KAAM,EAAKL,MAAMK,KAAKQ,QAAO,SAAAC,GAAI,OAAIA,IAASV,Q,uDAlBlD,WAEE,IACOC,EADgBU,KAAKC,MAAMD,KAAKE,UAAUC,IAC1Cb,KAEPd,KAAKoB,SAAS,CACZN,KAAMA,M,oBAgBV,WAAU,IAAD,OAEDc,EAAW5B,KAAKS,MAAME,MAAMkB,KAAK,SAACN,EAAMO,GAC5C,OAAO,cAAC,EAAD,CAAc5B,SAAU,EAAKO,MAAME,MAAMmB,IAA9BA,MAGpB,OACE,sBAAK3B,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,mDAEF,uBAAMA,UAAU,WAAhB,UACE,wBAAQA,UAAU,aAAa4B,QAAS,kBAAM,EAAKnB,SAAS,EAAKH,MAAMK,OAAvE,0BACA,qBAAKX,UAAU,YAAf,SACGyB,c,GA3CKrB,aCOHyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5a34cf7f.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Card.css';\r\n\r\nclass Card extends Component {\r\n    render() {\r\n      const {cardData} = this.props;\r\n      const {imageUrl} = cardData;\r\n\r\n      return (\r\n        <div className=\"card\" style={\r\n            {\r\n              backgroundImage: `url(${process.env.PUBLIC_URL}/assets/${imageUrl})`\r\n            }\r\n          }>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Card;","import React, {Component} from 'react';\nimport './App.css';\nimport Card from './Card';\nimport deckData from './Deck.json';\n\nclass App extends Component {\n\n  state = {\n    numOfCards: 0,\n    cards: []\n  };\n\n  componentDidMount() {\n\n    const loadDeck = () => JSON.parse(JSON.stringify(deckData));\n    const {deck} = loadDeck();\n\n    this.setState({\n      deck: deck\n    });\n  }\n\n  makeCard = () => {\n    const daCard = this.state.deck[Math.floor(Math.random() * this.state.deck.length)];\n\n    daCard.flipped = Math.random() < 0.5;\n\n    this.setState({\n      numOfCards: this.state.numOfCards + 1,\n      cards: this.state.cards.concat(daCard),\n      deck: this.state.deck.filter(card => card !== daCard)\n    });\n  }\n\n  render() {\n\n    const theCards = this.state.cards.map( (card, i) => {\n      return <Card key={i} cardData={this.state.cards[i]} />\n    });\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Tarokka Reading</h1>\n        </header>\n        <main className=\"App-main\">\n          <button className=\"make-cards\" onClick={() => this.makeCard(this.state.deck)}>Make a Card!</button>\n          <div className=\"cards-box\">\n            {theCards}  \n          </div>\n        </main>\n      </div>\n    );\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}