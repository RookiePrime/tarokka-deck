{"version":3,"sources":["Card.js","App.js","reportWebVitals.js","index.js"],"names":["Card","cardData","this","props","imageUrl","description","className","style","backgroundImage","process","transform","flipped","Component","App","state","numberOfCards","cards","getReading","number","makeCard","document","getElementById","pointerEvents","textContent","which","daCard","commonDeck","Math","floor","random","length","highDeck","setState","concat","filter","card","JSON","parse","stringify","deckData","theCards","map","i","id","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"qiZA2BeA,E,4JAvBX,WAAU,IACDC,EAAYC,KAAKC,MAAjBF,SACAG,EAAyBH,EAAzBG,SAAUC,EAAeJ,EAAfI,YAEjB,OACE,qBAAKC,UAAU,OAAf,SACE,qBAAKA,UAAU,UAAUC,MACvB,CACEC,gBAAgB,OAAD,OAASC,gBAAT,wBAA+CL,EAA/C,KACfM,UAAYT,EAASU,QAAV,iCAHf,SAME,qBAAKL,UAAU,WAAWC,MACxB,CACEG,UAAYT,EAASU,QAAV,iCAFf,SAIE,4BAAIN,c,GAjBCO,a,OC0EJC,E,4MAtEbC,MAAQ,CACNC,cAAe,EACfC,MAAO,I,EAcTC,WAAa,SAAAC,GAIP,EAAKJ,MAAMC,cAAgB,EAC7B,EAAKI,SAAL,UAEA,EAAKA,SAAL,QAGED,EAAS,IACXE,SAASC,eAAT,cAAsCd,MAAMe,cAAgB,OAC5DF,SAASC,eAAT,cAAsCE,YAAc,K,EAKxDJ,SAAW,SAAAK,GACT,IAAIC,EAAS,GAEQA,EAAhB,WAALD,EAA8B,EAAKV,MAAMY,WAAWC,KAAKC,MAAMD,KAAKE,SAAW,EAAKf,MAAMY,WAAWI,SAAoB,EAAKhB,MAAMiB,SAASJ,KAAKC,MAAMD,KAAKE,SAAW,EAAKf,MAAMiB,SAASD,UAErLnB,QAAUgB,KAAKE,SAAW,GAEjC,EAAKG,SAAS,CACZjB,cAAe,EAAKD,MAAMC,cAAgB,EAC1CC,MAAO,EAAKF,MAAME,MAAMiB,OAAOR,GAC/BC,WAAY,EAAKZ,MAAMY,WAAWQ,QAAO,SAAAC,GAAI,OAAIA,IAASV,KAC1DM,SAAU,EAAKjB,MAAMiB,SAASG,QAAO,SAAAC,GAAI,OAAIA,IAASV,Q,uDAvC1D,WAEE,IAFkB,EAEKW,KAAKC,MAAMD,KAAKE,UAAUC,IAC1Cb,EAHW,EAGXA,WAAYK,EAHD,EAGCA,SAEnB7B,KAAK8B,SAAS,CACZN,WAAYA,EACZK,SAAUA,M,oBAoCd,WAAU,IAAD,OAEDS,EAAWtC,KAAKY,MAAME,MAAMyB,KAAK,SAACN,EAAMO,GAC5C,OAAO,cAAC,EAAD,CAAczC,SAAU,EAAKa,MAAME,MAAM0B,IAA9BA,MAGpB,OACE,sBAAKpC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,mDAEF,uBAAMA,UAAU,WAAhB,UACE,wBAAQA,UAAU,aAAaqC,GAAG,aAAaC,QAAS,kBAAM,EAAK3B,WAAW,EAAKH,MAAMC,gBAAzF,+BACA,qBAAK4B,GAAG,YAAR,SACGH,c,GAhEK5B,aCOHiC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASC,eAAe,SAM1BwB,M","file":"static/js/main.4a56a1d2.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './Card.css';\r\n\r\nclass Card extends Component {\r\n    render() {\r\n      const {cardData} = this.props;\r\n      const {imageUrl, description} = cardData;\r\n\r\n      return (\r\n        <div className=\"card\">\r\n          <div className=\"pic-box\" style={\r\n            {\r\n              backgroundImage: `url(${process.env.PUBLIC_URL}/assets/card_${imageUrl})`,\r\n              transform: !cardData.flipped ? `rotate(180deg)` : `rotate(0deg)`\r\n            }\r\n          }>\r\n            <div className=\"text-box\" style={\r\n              {\r\n                transform: !cardData.flipped ? `rotate(180deg)` : `rotate(0deg)`\r\n              }\r\n            }><p>{description}</p></div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Card;","import React, {Component} from 'react';\nimport './App.css';\nimport Card from './Card';\nimport deckData from './Deck.json';\n\nclass App extends Component {\n\n  state = {\n    numberOfCards: 0,\n    cards: []\n  };\n\n  componentDidMount() {\n\n    const loadDeck = () => JSON.parse(JSON.stringify(deckData));\n    const {commonDeck, highDeck} = loadDeck();\n\n    this.setState({\n      commonDeck: commonDeck,\n      highDeck: highDeck\n    });\n  }\n\n  getReading = number => {\n    // Wipe out the current reading\n    // document.getElementById(`cards-box`).innerHTML=\"\";\n    // Get the 3 commons and 2 highs\n    if (this.state.numberOfCards < 3) {\n      this.makeCard(`common`);\n    } else {\n      this.makeCard(`high`);\n    }\n\n    if (number > 3) {\n      document.getElementById(`make-cards`).style.pointerEvents = \"none\";\n      document.getElementById(`make-cards`).textContent = \"\";\n    }\n    // Position them on the board\n  }\n\n  makeCard = which => {\n    let daCard = 0;\n    //Ternary for the which\n    which === `common` ? daCard = this.state.commonDeck[Math.floor(Math.random() * this.state.commonDeck.length)] : daCard = this.state.highDeck[Math.floor(Math.random() * this.state.highDeck.length)];\n  \n    daCard.flipped = Math.random() < 0.5;\n    \n    this.setState({\n      numberOfCards: this.state.numberOfCards + 1,\n      cards: this.state.cards.concat(daCard),\n      commonDeck: this.state.commonDeck.filter(card => card !== daCard),\n      highDeck: this.state.highDeck.filter(card => card !== daCard)\n    });\n  }\n\n  render() {\n\n    const theCards = this.state.cards.map( (card, i) => {\n      return <Card key={i} cardData={this.state.cards[i]} />\n    });\n\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Tarokka Reading</h1>\n        </header>\n        <main className=\"App-main\">\n          <button className=\"make-cards\" id=\"make-cards\" onClick={() => this.getReading(this.state.numberOfCards)}>See your Fortune!</button>\n          <div id=\"cards-box\">\n            {theCards}  \n          </div>\n        </main>\n      </div>\n    );\n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}